[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mcp-devagent"
version = "0.1.0"
description = "AI-powered development assistant with MCP protocol support"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "MCP-DevAgent Team", email = "dev@mcp-devagent.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = ["mcp", "ai", "development", "assistant", "langchain", "search"]

dependencies = [
    # Core framework
    "langchain==0.3.27",
    "langchain-community==0.3.29",
    "langchain-openai==0.3.32",
    "langchain-anthropic==0.3.19",
    "langchain-ollama==0.3.7",
    "langgraph==0.6.6",
    # MCP and API
    "mcp==1.13.1",
    "fastapi==0.116.1",
    "uvicorn==0.35.0",
    # Data validation and processing
    "pydantic==2.11.7",
    "pydantic-settings>=2.0.0",
    # Database and search
    "aiosqlite>=0.19.0",
    "sqlite-vss==0.1.2",
    # Utilities
    "python-dotenv>=1.0.0",
    "structlog>=23.0.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
    "httpx>=0.25.0",
    "langchain-core==0.3.75",
    "psutil>=7.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest==8.4.1",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]

testing = [
    "pytest==8.4.1",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "httpx>=0.25.0",
]

docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.22.0",
]

[project.urls]
Homepage = "https://github.com/mcp-devagent/mcp-devagent"
Repository = "https://github.com/mcp-devagent/mcp-devagent"
Documentation = "https://mcp-devagent.readthedocs.io"
"Bug Tracker" = "https://github.com/mcp-devagent/mcp-devagent/issues"

[project.scripts]
mcp-devagent = "mcp_devagent.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
mcp_devagent = ["py.typed"]

# Testing configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
asyncio_mode = "auto"

# Code formatting
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# Type checking
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "sqlite_vss.*",
    "mcp.*",
]
ignore_missing_imports = true

# Coverage
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[dependency-groups]
dev = [
    "aiosqlite>=0.21.0",
    "anthropic>=0.64.0",
    "fastapi>=0.116.1",
    "openai>=1.102.0",
    "psutil>=7.0.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "sqlite-vss>=0.1.2",
    "structlog>=25.4.0",
    "uvicorn>=0.35.0",
]
