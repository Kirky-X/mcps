name: LibraryMaster Build Check

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'library_master/**'
      - '.github/workflows/build-check-library_master.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'library_master/**'
      - '.github/workflows/build-check-library_master.yml'
  workflow_dispatch:

jobs:
  build-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('library_master/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      working-directory: ./library_master
      run: |
        python -m pip install --upgrade pip
        pip install build pytest pytest-cov pytest-asyncio
        pip install -e .
    
    - name: Lint with flake8
      working-directory: ./library_master
      run: |
        pip install flake8
        # Stop the build if there are Python syntax errors or undefined names
        flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 src --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Type check with mypy
      working-directory: ./library_master
      run: |
        pip install mypy types-requests
        mypy src/library_master --ignore-missing-imports || true
    
    - name: Test with pytest
      working-directory: ./library_master
      run: |
        pytest test/ -v --cov=src/library_master --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.12'
      uses: codecov/codecov-action@v3
      with:
        file: ./library_master/coverage.xml
        flags: library_master
        name: library_master-coverage
        fail_ci_if_error: false
    
    - name: Build package
      working-directory: ./library_master
      run: |
        python -m build
    
    - name: Check package
      working-directory: ./library_master
      run: |
        pip install twine
        twine check dist/*
    
    - name: Test installation
      working-directory: ./library_master
      run: |
        pip install dist/*.whl
        python -c "import library_master; print('LibraryMaster imported successfully')"